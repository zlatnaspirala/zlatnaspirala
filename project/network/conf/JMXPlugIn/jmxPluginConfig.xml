<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" 
      "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <bean id="jWebSocketServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>
    
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="beans">
            <map>
                <entry key="MX4J:name=HttpAdaptor" value-ref="HttpAdaptor"/>
                <entry key="MX4J:name=XSLTProcessor" value-ref="XSLTProcessor"/>
                <entry key="MX4J:name=HttpSSLAdaptor" value-ref="HttpSSLAdaptor"/>
            </map>
        </property>
        <property name="server" ref="jWebSocketServer"/>
     </bean>
   
   <bean id="rmiRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
        <property name="port" value="1099"/>
    </bean>
    
    <bean id="rmiConnector" class="org.springframework.jmx.support.ConnectorServerFactoryBean" depends-on="rmiRegistry">
        <property name="serviceUrl" value="service:jmx:rmi:///jndi/rmi://localhost:1099/jmxPlugin"/>
        <property name="server" ref="jWebSocketServer"/>
        <property name="threaded" value="true"/>
        <property name="daemon" value="true"/>
        <property name="environment">
            <map>
                <entry key="jmx.remote.authenticator" value-ref="jmxPluginAuthenticator"/>
            </map>
        </property>
    </bean>
    
    <bean id="clientConnector" class="org.springframework.jmx.support.MBeanServerConnectionFactoryBean" depends-on="rmiSSLConnector">
        <property name="serviceUrl" value="service:jmx:rmi:///jndi/rmi://localhost:1099/jmxPlugin"/>
    </bean> 
    
    <bean id="rmiSSLConnector" class="org.springframework.jmx.support.ConnectorServerFactoryBean" depends-on="rmiRegistry">
        <property name="serviceUrl" value="service:jmx:rmi:///jndi/rmi://localhost:1099/jmxPluginSSL"/>
        <property name="server" ref="jWebSocketServer"/>
        <property name="threaded" value="true"/>
        <property name="daemon" value="true"/>
        <property name="environment">
            <map>
                <entry key="jmx.remote.authenticator" value-ref="jmxPluginAuthenticator"/>
                <entry key="jmx.remote.rmi.client.socket.factory">
                    <bean class="javax.rmi.ssl.SslRMIClientSocketFactory"/>
                </entry>
                <entry key="jmx.remote.rmi.server.socket.factory">
                    <bean class="javax.rmi.ssl.SslRMIServerSocketFactory"/>
                </entry>
            </map>
        </property>
    </bean>
   
   <bean id="clientSSLConnector" class="org.springframework.jmx.support.MBeanServerConnectionFactoryBean" depends-on="rmiSSLConnector">
        <property name="serviceUrl" value="service:jmx:rmi:///jndi/rmi://localhost:1099/jmxPluginSSL"/>
    </bean> 
    
   <bean id="XSLTProcessor" class="mx4j.tools.adaptor.http.XSLTProcessor" />
   
   <bean id="HttpAdaptor" class="mx4j.tools.adaptor.http.HttpAdaptor">
        <property name="processor" ref="XSLTProcessor"/>
        <property name="port" value="8080"/>
        <property name="host" value="0.0.0.0"/>
        <property name="authenticationMethod" value="basic"/>
   </bean>
   
   <bean id="HttpSSLAdaptor" class="mx4j.tools.adaptor.http.HttpAdaptor">
        <property name="processor" ref="XSLTProcessor"/>
        <property name="socketFactory" ref="SSLHttpAdaptor"/>
        <property name="port" value="8020"/>
        <property name="host" value="0.0.0.0"/>
        <property name="authenticationMethod" value="basic"/>
   </bean>
   
   <bean id="SSLHttpAdaptor" class="mx4j.tools.adaptor.ssl.SSLAdaptorServerSocketFactory">
        <property name="keyStoreName" value="/home/svn/ijwssvn/rte/jWebSocket-1.0/conf/jWebSocket.ks"/>
        <property name="keyStorePassword" value="jWebSocket"/>
  </bean>
   
   <bean id="jmxPluginAuthenticator" class="org.jwebsocket.plugins.jmx.util.JMXPlugInAuthenticator"/>
   
   <bean id="staticAuthUserDetailsService" class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl">
		<property name="userMap">
			<!-- format: username=password,grantedAuthority[,grantedAuthority][,enabled|disabled] -->
			<value>
					admin=1d4022319b1ba976f1c8cfbab0e9603f, ROLE_ADMIN_JMX, enabled
			</value>
		</property>	
	</bean>
</beans>
